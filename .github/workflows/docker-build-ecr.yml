name: Build and Push URL Analyzer Docker Image to AWS ECR

on:
  push:
    branches:
      - master

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - run: go mod download
      - run: go test -v -cover ./...

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set Environment Variables
        run: |
          echo "IMAGE_TAG=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
          echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV
          echo "REPO_NAME=url-analyzer-api-ecr-repo" >> $GITHUB_ENV

      - name: Build and Tag Docker Image
        run: |
          docker build -t $ECR_REGISTRY/$REPO_NAME:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$REPO_NAME:$IMAGE_TAG $ECR_REGISTRY/$REPO_NAME:latest

      - name: Push Docker Image to ECR
        run: |
          docker push $ECR_REGISTRY/$REPO_NAME:$IMAGE_TAG
          docker push $ECR_REGISTRY/$REPO_NAME:latest

      - name: Image URL
        run: |
          echo "Docker Image Specific: $ECR_REGISTRY/$REPO_NAME:$IMAGE_TAG"
          echo "Docker Image Latest: $ECR_REGISTRY/$REPO_NAME:latest"

      - name: Deploy App Runner
        run: |
          aws apprunner start-deployment --service-arn arn:aws:apprunner:ap-south-1:369129104419:service/url-analyzer-app-runner/bc099d3d45b049e2b2ae05255f96038b